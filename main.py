import discord
import os
from discord.ext import commands
from discord.ui import Button, View, Modal, TextInput
from discord.utils import get
from datetime import datetime
import re

intents = discord.Intents.default()
intents.message_content = True
intents.members = True

bot = commands.Bot(command_prefix="!", intents=intents)

AUTO_ROLE_ID = 1396072475053265008
WELCOME_CHANNEL_ID = 1396082261245296700

COMMAND_ROLES = {
    "rules": 1396075460294737941,    
    "guide": 1396075460294737941,    
    "ranks": 1396075460294737941,    
    "news": 1396075460294737941,     
    "events": 1396075460294737941,   
    "fpl_application": 1396075460294737941  
}

def has_command_role(interaction: discord.Interaction, command_name: str) -> bool:
    required_role_id = COMMAND_ROLES.get(command_name)
    if not required_role_id:
        return False
    
    return any(role.id == required_role_id for role in interaction.user.roles)

RULES = {
    "ru": {
        "title": "üìú –û—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–µ –ø—Ä–∞–≤–∏–ª–∞ —Å–µ—Ä–≤–µ—Ä–∞ RankPush",
        "description": (
            "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –Ω–∞ RankPush! –ü–µ—Ä–µ–¥ –Ω–∞—á–∞–ª–æ–º –∏–≥—Ä—ã –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –æ–∑–Ω–∞–∫–æ–º—å—Ç–µ—Å—å —Å –ø—Ä–∞–≤–∏–ª–∞–º–∏. "
            "–ù–∞—Ä—É—à–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –ø—Ä–∞–≤–∏–ª –≤–ª–µ—á—ë—Ç –¥–∏—Å—Ü–∏–ø–ª–∏–Ω–∞—Ä–Ω—ã–µ –º–µ—Ä—ã –≤–ø–ª–æ—Ç—å –¥–æ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏."
        ),
        "fields": [
            ("‚öñÔ∏è 1. –û–±—â–∏–µ –Ω–æ—Ä–º—ã –ø–æ–≤–µ–¥–µ–Ω–∏—è",
             "–£–≤–∞–∂–∞–π—Ç–µ –≤—Å–µ—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤. –ó–∞–ø—Ä–µ—â–µ–Ω—ã –ª—é–±—ã–µ —Ñ–æ—Ä–º—ã –æ—Å–∫–æ—Ä–±–ª–µ–Ω–∏–π, –ø—Ä–æ–≤–æ–∫–∞—Ü–∏–π –∏ –¥–∏—Å–∫—Ä–∏–º–∏–Ω–∞—Ü–∏–∏."),
            ("‚ùå 2. –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –∑–∞–ø—Ä–µ—â—ë–Ω–Ω–æ–≥–æ –ü–û",
             "–ß–∏—Ç—ã, —Å–∫—Ä–∏–ø—Ç—ã –∏ —Å—Ç–æ—Ä–æ–Ω–Ω–µ–µ –ü–û —Å—Ç—Ä–æ–≥–æ –∑–∞–ø—Ä–µ—â–µ–Ω—ã. –ú–æ–º–µ–Ω—Ç–∞–ª—å–Ω—ã–π –ø–æ–∂–∏–∑–Ω–µ–Ω–Ω—ã–π –±–∞–Ω –±–µ–∑ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π."),
            ("‚ùå 3. VPN –∏ –æ–±—Ö–æ–¥ –±–ª–æ–∫–∏—Ä–æ–≤–æ–∫",
             "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ VPN –∏–ª–∏ –ø—Ä–æ–∫—Å–∏ –¥–ª—è –≤—Ö–æ–¥–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—Ä–µ—â–µ–Ω–æ –∏ –∫–∞—Ä–∞–µ—Ç—Å—è –º—É—Ç–æ–º –∏–ª–∏ –∫–∏–∫–æ–º."),
            ("‚ö†Ô∏è 4. –≠–∫—Å–ø–ª—É–∞—Ç–∞—Ü–∏—è –±–∞–≥–æ–≤ –∏ —É—è–∑–≤–∏–º–æ—Å—Ç–µ–π",
             "–õ—é–±–æ–µ –Ω–∞–º–µ—Ä–µ–Ω–Ω–æ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –±–∞–≥–æ–≤ ‚Äî —Å—Ç—Ä–æ–≥–æ –∑–∞–ø—Ä–µ—â–µ–Ω–æ. –ó–∞ –ø–µ—Ä–≤–æ–µ –Ω–∞—Ä—É—à–µ–Ω–∏–µ ‚Äî –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ, –¥–∞–ª–µ–µ ‚Äî –≤—Ä–µ–º–µ–Ω–Ω—ã–µ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏."),
            ("üö´ 5. –ó–∞–ø—Ä–µ—Ç –Ω–∞ –ø–æ–ª–∏—Ç–∏—á–µ—Å–∫–∏–µ –∏ –∫–æ–Ω—Ñ–ª–∏–∫—Ç–Ω—ã–µ —Ç–µ–º—ã",
             "–û–±—Å—É–∂–¥–µ–Ω–∏–µ –ø–æ–ª–∏—Ç–∏–∫–∏, –≤–æ–π–Ω—ã –∏ –∏–Ω—ã—Ö –∫–æ–Ω—Ñ–ª–∏–∫—Ç–Ω—ã—Ö —Ç–µ–º –∑–∞–ø—Ä–µ—â–µ–Ω–æ. –ù–∞–∫–∞–∑–∞–Ω–∏–µ ‚Äî –º—É—Ç –Ω–∞ 24 —á–∞—Å–∞."),
            ("üî• 6. –¢–æ–∫—Å–∏—á–Ω–æ—Å—Ç—å –∏ —Ç–æ–∫—Å–∏—á–Ω–æ–µ –ø–æ–≤–µ–¥–µ–Ω–∏–µ",
             "–û—Å–∫–æ—Ä–±–ª–µ–Ω–∏—è, —Ç—Ä–æ–ª–ª–∏–Ω–≥, –ø—Ä–æ–≤–æ–∫–∞—Ü–∏–∏ –∏ —Ç–æ–∫—Å–∏—á–Ω–æ—Å—Ç—å –∑–∞–ø—Ä–µ—â–µ–Ω—ã. –ü–æ—Å–ª–µ–¥—Å—Ç–≤–∏—è ‚Äî –æ—Ç –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è –¥–æ –±–∞–Ω–∞."),
            ("üí¨ 7. –°–ø–∞–º –∏ —Ñ–ª—É–¥",
             "–ó–∞–ø—Ä–µ—â—ë–Ω –º–∞—Å—Å–æ–≤—ã–π —Å–ø–∞–º, —Ñ–ª—É–¥ –∏ –ø–æ–≤—Ç–æ—Ä—è—é—â–∏–µ—Å—è —Å–æ–æ–±—â–µ–Ω–∏—è. –ù–∞–∫–∞–∑–∞–Ω–∏–µ ‚Äî –º—É—Ç –Ω–∞ 2 —á–∞—Å–∞."),
            ("üîû 8. –ù–æ–≤—ã–µ –∞–∫–∫–∞—É–Ω—Ç—ã –∏ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å",
             "–ê–∫–∫–∞—É–Ω—Ç—ã Discord –º–ª–∞–¥—à–µ 6 –º–µ—Å—è—Ü–µ–≤ –¥–æ–ª–∂–Ω—ã –∏–º–µ—Ç—å –º–∏–Ω–∏–º—É–º 400 –∏–≥—Ä –Ω–∞ Faceit –¥–ª—è –¥–æ–ø—É—Å–∫–∞."),
            ("üéÆ 9. –û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è –º–∞—Ç—á–µ–π",
             "–•–æ—Å—Ç–∏–Ω–≥ –º–∞—Ç—á–µ–π –æ—Å—É—â–µ—Å—Ç–≤–ª—è–µ—Ç –∫–∞–ø–∏—Ç–∞–Ω –ø–µ—Ä–≤–æ–π –∫–æ–º–∞–Ω–¥—ã. –ü–∞—Ä–æ–ª—å –¥–ª—è Faceit ‚Äî **0171**."),
            ("üì¢ 10. –ö–æ–º–º—É–Ω–∏–∫–∞—Ü–∏—è –∏ –≥–æ–ª–æ—Å–æ–≤—ã–µ –∫–∞–Ω–∞–ª—ã",
             "–í –≥–æ–ª–æ—Å–æ–≤—ã—Ö –∫–∞–Ω–∞–ª–∞—Ö –∑–∞–ø—Ä–µ—â–µ–Ω—ã –∫—Ä–∏–∫–∏, –æ—Å–∫–æ—Ä–±–ª–µ–Ω–∏—è –∏ –∞–≥—Ä–µ—Å—Å–∏–≤–Ω–æ–µ –ø–æ–≤–µ–¥–µ–Ω–∏–µ."),
            ("ü§ñ 11. –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –±–æ—Ç–æ–≤",
             "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –±–æ—Ç–æ–≤ —Å–æ–≥–ª–∞—Å–Ω–æ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º. –ó–ª–æ—É–ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏–µ –∏ —Å–ø–∞–º –±–æ—Ç–∞–º–∏ –∑–∞–ø—Ä–µ—â–µ–Ω—ã."),
            ("üö´ 12. –†–µ–∫–ª–∞–º–∞ –∏ —Å—Å—ã–ª–∫–∏",
             "–õ—é–±–∞—è —Ä–µ–∫–ª–∞–º–∞ –±–µ–∑ –æ–¥–æ–±—Ä–µ–Ω–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏ –∑–∞–ø—Ä–µ—â–µ–Ω–∞."),
            ("üîí 13. –ö–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç—å",
             "–ó–∞–ø—Ä–µ—â–µ–Ω–æ —Ä–∞–∑–≥–ª–∞—à–∞—Ç—å –ª–∏—á–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥—Ä—É–≥–∏—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –±–µ–∑ –∏—Ö —Å–æ–≥–ª–∞—Å–∏—è."),
            ("üìã 14. –û—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏",
             "–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏—è —Å–µ—Ä–≤–µ—Ä–∞ –∏–º–µ–µ—Ç –ø—Ä–∞–≤–æ –ø—Ä–∏–Ω–∏–º–∞—Ç—å —Ä–µ—à–µ–Ω–∏—è –ø–æ –º–æ–¥–µ—Ä–∞—Ü–∏–∏ –∏ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∞–º. –†–µ—à–µ–Ω–∏—è —è–≤–ª—è—é—Ç—Å—è –æ–∫–æ–Ω—á–∞—Ç–µ–ª—å–Ω—ã–º–∏.")
        ],
        "footer": "–°–ø–∞—Å–∏–±–æ –∑–∞ —Å–æ–±–ª—é–¥–µ–Ω–∏–µ –ø—Ä–∞–≤–∏–ª –∏ –ø–æ–¥–¥–µ—Ä–∂–∫—É –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ–π –∞—Ç–º–æ—Å—Ñ–µ—Ä—ã –Ω–∞ RankPush!"
    },
    "en": {
        "title": "üìú Official RankPush Server Rules",
        "description": (
            "Welcome to RankPush! Please read the rules carefully before playing. "
            "Violations will result in disciplinary actions, including bans."
        ),
        "fields": [
            ("‚öñÔ∏è 1. General Conduct",
             "Respect all members. Any form of insults, provocation, or discrimination is forbidden."),
            ("‚ùå 2. Use of Forbidden Software",
             "Cheats, scripts, and third-party software are strictly prohibited. Immediate permanent ban without warnings."),
            ("‚ùå 3. VPN and Bypass Methods",
             "Using VPN or proxies to access the server is prohibited and may result in mute or kick."),
            ("‚ö†Ô∏è 4. Exploiting Bugs and Vulnerabilities",
             "Intentional exploitation of bugs is forbidden. First offense ‚Äî warning; subsequent offenses ‚Äî temporary bans."),
            ("üö´ 5. No Politics or Conflict Topics",
             "Discussion of politics, war, or other conflict topics is banned. Penalty ‚Äî 24-hour mute."),
            ("üî• 6. Toxicity and Harassment",
             "Insults, trolling, provocations, and toxic behavior are banned. Consequences range from warnings to bans."),
            ("üí¨ 7. Spam and Flood",
             "Excessive spam, flooding, and repetitive messages are forbidden. Penalty ‚Äî 2-hour mute."),
            ("üîû 8. New Accounts and Activity",
             "Discord accounts younger than 6 months must have at least 400 Faceit matches to be allowed."),
            ("üéÆ 9. Match Organization",
             "Matches are hosted by the captain of the first team. Faceit password is **0171**."),
            ("üì¢ 10. Communication and Voice Channels",
             "No shouting, insults, or aggressive behavior in voice channels."),
            ("ü§ñ 11. Bot Usage",
             "Use bots according to instructions. Bot abuse and spam are forbidden."),
            ("üö´ 12. Advertising and Links",
             "Advertising without admin approval is prohibited."),
            ("üîí 13. Privacy",
             "Do not share personal data of other members without consent."),
            ("üìã 14. Administration Responsibility",
             "Server admins have the right to moderate and ban. Decisions are final.")
        ],
        "footer": "Thank you for following the rules and supporting a professional environment at RankPush!"
    }
}


GUIDE = {
    "uk": {
        "title": "üß† –ì–∞–π–¥ –ø–æ Faceit-—Å–µ—Ä–≤–µ—Ä—É RankPush",
        "description": (
            "–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é –≤–∞—Å –Ω–∞ Faceit!\n"
            "–°–µ–π—á–∞—Å –≤—ã —É–∑–Ω–∞–µ—Ç–µ, –∫–∞–∫ –∏–≥—Ä–∞—Ç—å —Å –Ω–æ–≤—ã–º –±–æ—Ç–æ–º –ø–æ—à–∞–≥–æ–≤–æ."
        ),
        "fields": [
            ("üéß 1. –ó–∞–π–¥–∏ –≤ –≤–æ–π—Å –∏ —á–∞—Ç", "–ù–∞–ø—Ä–∏–º–µ—Ä, –≤—ã –∑–∞—à–ª–∏ –≤ voice **2v2**, —Ç–æ–≥–¥–∞ —É –≤–∞—Å –ø–æ—è–≤–∏—Ç—Å—è —á–∞—Ç **2v2**."),
            ("üîò 2. –ù–∞–∂–º–∏—Ç–µ 'Join Queue'", "–í —á–∞—Ç–µ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É **Join Queue** –∏ –æ–∂–∏–¥–∞–π—Ç–µ –¥—Ä—É–≥–∏—Ö –∏–≥—Ä–æ–∫–æ–≤."),
            ("üë• 3. –ö–æ–≥–¥–∞ —Å–æ–±—Ä–∞–ª–∏—Å—å –∏–≥—Ä–æ–∫–∏", "–ü–æ—Å–ª–µ —Ç–æ–≥–æ –∫–∞–∫ –Ω—É–∂–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏–≥—Ä–æ–∫–æ–≤ –≤ –æ—á–µ—Ä–µ–¥–∏ ‚Äî –≤—ã–±–∏—Ä–∞–µ—Ç—Å—è —Ä–µ–∂–∏–º —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥."),
            ("üéØ 4. –†–µ–∂–∏–º—ã –∫–æ–º–∞–Ω–¥", (
                "**Balanced** ‚Äî –∫–æ–º–∞–Ω–¥—ã —Ä–∞—Å–ø—Ä–µ–¥–µ–ª—è—é—Ç—Å—è –ø–æ —Å–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–Ω–æ–º—É ELO.\n"
                "**2 top rated players** ‚Äî –≤—ã–±–∏—Ä–∞—é—Ç—Å—è 2 –∫–∞–ø–∏—Ç–∞–Ω–∞ —Å —Å–∞–º—ã–º –≤—ã—Å–æ–∫–∏–º ELO, –∏ –æ–Ω–∏ –ø–æ –æ—á–µ—Ä–µ–¥–∏ –≤—ã–±–∏—Ä–∞—é—Ç –∏–≥—Ä–æ–∫–æ–≤."
            )),
            ("üö™ 5. –û—Ç–º–µ–Ω–∞ –æ—á–µ—Ä–µ–¥–∏", "–ï—Å–ª–∏ –≤—ã –ø–µ—Ä–µ–¥—É–º–∞–ª–∏ ‚Äî –Ω–∞–∂–º–∏—Ç–µ **Leave Queue**."),
            ("üîÑ 6. –ü–æ–≤—Ç–æ—Ä–Ω–∞—è –∏–≥—Ä–∞", "–ü–æ—Å–ª–µ –æ–∫–æ–Ω—á–∞–Ω–∏—è –∏–≥—Ä—ã –º–æ–∂–Ω–æ –Ω–∞–∂–∞—Ç—å **Requeue** ‚Äî –∏ –≤—ã —Å–Ω–æ–≤–∞ –≤ –æ—á–µ—Ä–µ–¥–∏."),
            ("üéô 7. –û–±—â–µ–Ω–∏–µ –≤ –≤–æ–π—Å–µ", "–í–µ–¥–∏—Ç–µ —Å–µ–±—è —É–≤–∞–∂–∏—Ç–µ–ª—å–Ω–æ, –Ω–µ –∫—Ä–∏—á–∏—Ç–µ, –Ω–µ –ø–µ—Ä–µ–±–∏–≤–∞–π—Ç–µ –¥—Ä—É–≥–∏—Ö –∏–≥—Ä–æ–∫–æ–≤."),
            ("üÜò 8. –í–æ–∑–Ω–∏–∫–ª–∏ –ø—Ä–æ–±–ª–µ–º—ã?", "–û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ —á–∞—Ç **#support** –∏–ª–∏ –Ω–∞–ø–∏—à–∏—Ç–µ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä—É."),
            ("üåü –°–æ–≤–µ—Ç—ã –Ω–æ–≤–∏—á–∫–∞–º", (
                "- –ù–µ –±–æ–π—Å—è —Å–ø—Ä–∞—à–∏–≤–∞—Ç—å.\n"
                "- –°–ª–µ–¥–∏ –∑–∞ –æ—á–µ—Ä–µ–¥—å—é –≤ —á–∞—Ç–µ.\n"
                "- –°–æ–±–ª—é–¥–∞–π –ø—Ä–∞–≤–∏–ª–∞, –±—É–¥—å –≤–µ–∂–ª–∏–≤—ã–º –∏ –∏–≥—Ä–∞–π –≤ —É–¥–æ–≤–æ–ª—å—Å—Ç–≤–∏–µ üéÆ"
            ))
        ],
        "footer": "–°–ø–∞—Å–∏–±–æ –∑–∞ –≤–Ω–∏–º–∞–Ω–∏–µ, —É–¥–∞—á–Ω—ã—Ö –≤–∞–º –∏–≥—Ä!"
    },
    "en": {
        "title": "üß† Faceit Bot Guide (RankPush)",
        "description": (
            "Welcome to Faceit!\n"
            "Here‚Äôs a simple step-by-step guide on how to play using the new bot:"
        ),
        "fields": [
            ("üéß 1. Join Voice & Chat", "Example: join the **2v2 voice** channel and you'll see the **2v2 chat** appear."),
            ("üîò 2. Click 'Join Queue'", "Press the **Join Queue** button and wait for other players."),
            ("üë• 3. Queue fills up", "Once the right number of players has joined, you‚Äôll select a **team selection mode**."),
            ("üéØ 4. Team Modes", (
                "**Balanced** ‚Äî teams are auto-distributed evenly by ELO.\n"
                "**2 top rated players** ‚Äî top 2 ELO players become captains and pick teams in turns."
            )),
            ("üö™ 5. Leaving the queue", "Click **Leave Queue** if you want to exit."),
            ("üîÑ 6. Replay", "Press **Requeue** after the match to play again."),
            ("üéô 7. Voice chat behavior", "Be respectful, avoid yelling or interrupting others."),
            ("üÜò 8. Need help?", "Ask in **#support** or contact a moderator."),
            ("üåü Tips for newcomers", (
                "- Don‚Äôt be afraid to ask.\n"
                "- Watch the chat queue.\n"
                "- Follow rules, be friendly, and enjoy the game üéÆ"
            ))
        ],
        "footer": "Thanks for your attention and good luck!"
    }
}

RANKS = {
    "uk": {
        "title": "üèÜ –°–∏—Å—Ç–µ–º–∞ —É—Ä–æ–≤–Ω–µ–π RankPush",
        "description": (
            "–ù–∞ –Ω–∞—à–µ–º —Å–µ—Ä–≤–µ—Ä–µ –¥–µ–π—Å—Ç–≤—É–µ—Ç —Å–∏—Å—Ç–µ–º–∞ —É—Ä–æ–≤–Ω–µ–π ‚Äî –∏–≥—Ä–∞–π —á–∞—â–µ, –ø–æ–∫–∞–∑—ã–≤–∞–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç, –∏ —Ç—ã –ø–æ–¥–Ω–∏–º–µ—à—å—Å—è –≤–≤–µ—Ä—Ö!\n\n"
            "–ö–∞–∂–¥—ã–π —É—Ä–æ–≤–µ–Ω—å –æ—Ç—Ä–∞–∂–∞–µ—Ç —Ç–≤–æ–π –≤–∫–ª–∞–¥ –∏ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å. –ü–æ–≤—ã—à–∞–π—Å—è, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å —É–≤–∞–∂–µ–Ω–∏–µ, –¥–æ—Å—Ç—É–ø –∫ –ø—Ä–∏–≤–∏–ª–µ–≥–∏—è–º –∏ –∫—Ä—É—Ç—ã–µ —Ä–æ–ª–∏!"
        ),
        "fields": [
            ("ü•â Level 1 ‚Äî –ù–æ–≤–∏—á–æ–∫", "üë§ –¢—Ä–µ–±—É–µ—Ç—Å—è: **0+ ELO**\n–¢—ã —Ç–æ–ª—å–∫–æ –Ω–∞—á–∞–ª –ø—É—Ç—å ‚Äî –≤–ø–µ—Ä–µ–¥–∏ –±–æ–ª—å—à–∏–µ –º–∞—Ç—á–∏!"),
            ("ü•à Level 2 ‚Äî –ò–≥—Ä–æ–∫", "üéØ –¢—Ä–µ–±—É–µ—Ç—Å—è: **100+ ELO**\n–ù–∞–±—Ä–∞–ª –ø–µ—Ä–≤—ã–µ –ø–æ–±–µ–¥—ã, –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º –ø–æ–¥–Ω–∏–º–∞—Ç—å—Å—è."),
            ("ü•à Level 3 ‚Äî –ê–∫—Ç–∏–≤–∏—Å—Ç", "‚öîÔ∏è –¢—Ä–µ–±—É–µ—Ç—Å—è: **200+ ELO**\n–°—Ç–∞–±–∏–ª—å–Ω—ã–π –∏–≥—Ä–æ–∫, —É–∂–µ —á—É–≤—Å—Ç–≤—É–µ—à—å Faceit-–¥–≤–∏–∂."),
            ("ü•á Level 4 ‚Äî –°—Ç—Ä–∏–º–µ—Ä", "üì∫ –¢—Ä–µ–±—É–µ—Ç—Å—è: **350+ ELO**\n–ò–≥—Ä–∞–µ—à—å –∫—Ä–∞—Å–∏–≤–æ ‚Äî –ø–æ—Ä–∞ –¥–µ–ª–∏—Ç—å—Å—è —Ö–∞–π–ª–∞–π—Ç–∞–º–∏."),
            ("ü•á Level 5 ‚Äî –ù–∞–¥–µ–∂–Ω—ã–π", "üõ°Ô∏è –¢—Ä–µ–±—É–µ—Ç—Å—è: **450+ ELO**\n–ö–æ–º–∞–Ω–¥—ã —É–≤–∞–∂–∞—é—Ç —Ç–µ–±—è, —á–∞—Å—Ç–æ –±–µ—Ä—É—Ç –≤ —Å—Ç–∞–∫."),
            ("üèÖ Level 6 ‚Äî –ü–æ–ª—É–ø—Ä–æ", "üî• –¢—Ä–µ–±—É–µ—Ç—Å—è: **600+ ELO**\n–ò–≥—Ä–∞–µ—à—å –Ω–∞ —É—Ä–æ–≤–Ω–µ. –ì–æ—Ç–æ–≤ –∫ —Å–µ—Ä—å—ë–∑–Ω—ã–º –±–æ—è–º."),
            ("üèÖ Level 7 ‚Äî –ö–∞–ø–∏—Ç–∞–Ω", "üß† –¢—Ä–µ–±—É–µ—Ç—Å—è: **800+ ELO**\n–£–º–µ–µ—à—å –ª–∏–¥–∏—Ä–æ–≤–∞—Ç—å, –≥—Ä–∞–º–æ—Ç–Ω–æ —Å–æ–±–∏—Ä–∞–µ—à—å —Å–æ—Å—Ç–∞–≤."),
            ("üéñÔ∏è Level 8 ‚Äî –õ–µ–≥–µ–Ω–¥–∞", "üåü –¢—Ä–µ–±—É–µ—Ç—Å—è: **1000+ ELO**\n–ò–º—è —Ç–≤–æ—ë —É–∂–µ –∏–∑–≤–µ—Å—Ç–Ω–æ –≤ –∫–∞–Ω–∞–ª–∞—Ö. –ò–≥—Ä–∞—é—Ç —Å —É–≤–∞–∂–µ–Ω–∏–µ–º."),
            ("üéñÔ∏è Level 9 ‚Äî –≠–ª–∏—Ç–∞", "üíé –¢—Ä–µ–±—É–µ—Ç—Å—è: **1300+ ELO**\n–í—ã—Å—à–∏–π –∫–ª–∞—Å—Å. –õ—É—á—à–∏–µ —Ö–æ—Ç—è—Ç –≤ —Ç–≤–æ—é –∫–æ–º–∞–Ω–¥—É."),
            ("üëë Level 10 ‚Äî –ì—Ä–∞–Ω–¥–º–∞—Å—Ç–µ—Ä", 
 "üèÜ –¢—Ä–µ–±—É–µ—Ç—Å—è: **2000+ ELO**\n"
 "–ê–±—Å–æ–ª—é—Ç. –¢—ã ‚Äî –∏–∫–æ–Ω–∞ RankPush.\n"
 "–ï—Å–ª–∏ –ø—Ä–æ–¥–æ–ª–∂–∏—à—å –≤ —Ç–æ–º –∂–µ –¥—É—Ö–µ ‚Äî —Å–ª–µ–¥—É—é—â–∏–º —à–∞–≥–æ–º –º–æ–∂–µ—Ç —Å—Ç–∞—Ç—å **FPL-C** –∏–ª–∏ –¥–∞–∂–µ **FPL**. "
 "–¢–≤–æ—è –∫–∞—Ä—å–µ—Ä–∞ —Ç–æ–ª—å–∫–æ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è!")
        ],
        "footer": "–ù–∞–±–∏—Ä–∞–π ELO, –ø—Ä–æ–∫–∞—á–∏–≤–∞–π –ª–µ–≤–µ–ª –∏ —Å—Ç–∞–Ω–æ–≤–∏—Å—å –ª–µ–≥–µ–Ω–¥–æ–π –Ω–∞—à–µ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞!"
    },
    "en": {
        "title": "üèÜ RankPush Level System",
        "description": (
            "Our server uses a progressive level system ‚Äî the more you play and win, the higher you climb!\n\n"
            "Each level reflects your experience and commitment. Unlock recognition, access special roles, and show your worth!"
        ),
        "fields": [
            ("ü•â Level 1 ‚Äî Newcomer", "üë§ Required: **0+ ELO**\nJust getting started ‚Äî the journey begins!"),
            ("ü•à Level 2 ‚Äî Player", "üéØ Required: **100+ ELO**\nYou've gained some wins. Keep pushing!"),
            ("ü•à Level 3 ‚Äî Active", "‚öîÔ∏è Required: **200+ ELO**\nYou're becoming consistent. Great job!"),
            ("ü•á Level 4 ‚Äî Streamer", "üì∫ Required: **350+ ELO**\nYou play well ‚Äî start showing your skills!"),
            ("ü•á Level 5 ‚Äî Trusted", "üõ°Ô∏è Required: **450+ ELO**\nTeams trust you. You're always welcome."),
            ("üèÖ Level 6 ‚Äî Semi-Pro", "üî• Required: **600+ ELO**\nSolid skills. Ready for real challenges."),
            ("üèÖ Level 7 ‚Äî Captain", "üß† Required: **800+ ELO**\nYou lead the team and make smart picks."),
            ("üéñÔ∏è Level 8 ‚Äî Legend", "üåü Required: **1000+ ELO**\nYour name is known. People respect your game."),
            ("üéñÔ∏è Level 9 ‚Äî Elite", "üíé Required: **1300+ ELO**\nTop-tier player. Everyone wants you on their team."),
            ("üëë Level 10 ‚Äî Grandmaster", 
 "üèÜ Required: **2000+ ELO**\n"
 "The pinnacle. You are the icon of RankPush.\n"
 "Keep grinding ‚Äî your next step might be **FPL-C** or even **FPL**. "
 "Your career is just beginning!")
        ],
        "footer": "Grind ELO, level up, and become a true server legend!"
    }
}




ALLOWED_ROLE_IDS = [1396075460294737941]  

NEWS_CHANNEL_ID = 1396077313237585990

BASE_NEWS = {
    "en": {
        "title": "üì¢ Announcements & News",
        "description": (
            "This section features the **latest updates**, bot improvements, tournaments, "
            "and important Faceit community news.\n"
            "‚ö†Ô∏è Each announcement appears as a **separate embed** message."
        ),
        "fields": [],
        "footer": "üîî Stay tuned for updates ‚Äî don‚Äôt miss anything!"
    },
    "uk": {
        "title": "üì¢ –û–±—ä—è–≤–ª–µ–Ω–∏—è –∏ –Ω–æ–≤–æ—Å—Ç–∏",
        "description": (
            "–ó–¥–µ—Å—å –ø—É–±–ª–∏–∫—É—é—Ç—Å—è **–ø–æ—Å–ª–µ–¥–Ω–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è**, —É–ª—É—á—à–µ–Ω–∏—è –±–æ—Ç–∞, —Ç—É—Ä–Ω–∏—Ä—ã "
            "–∏ –≤–∞–∂–Ω—ã–µ –Ω–æ–≤–æ—Å—Ç–∏ –Ω–∞—à–µ–≥–æ Faceit-—Å–æ–æ–±—â–µ—Å—Ç–≤–∞.\n"
            "‚ö†Ô∏è –ö–∞–∂–¥–æ–µ –Ω–æ–≤–æ–µ –æ–±—ä—è–≤–ª–µ–Ω–∏–µ –ø—É–±–ª–∏–∫—É–µ—Ç—Å—è –∫–∞–∫ **–æ—Ç–¥–µ–ª—å–Ω—ã–π —ç–º–±–µ–¥**."
        ),
        "fields": [],
        "footer": "üîî –°–ª–µ–¥–∏—Ç–µ –∑–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è–º–∏, —á—Ç–æ–±—ã –Ω–∏—á–µ–≥–æ –Ω–µ –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å!"
    }
}


NEWS_ITEMS = []

class NewsModal(Modal, title='–û–ø—É–±–ª—ñ–∫—É–≤–∞—Ç–∏ –Ω–æ–≤–∏–Ω—É'):
    news_title = TextInput(label='–ó–∞–≥–æ–ª–æ–≤–æ–∫ –Ω–æ–≤–∏–Ω–∏', style=discord.TextStyle.short)
    news_content = TextInput(label='–ó–º—ñ—Å—Ç –Ω–æ–≤–∏–Ω–∏', style=discord.TextStyle.long)
    news_image = TextInput(label='–ü–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∞ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è (–Ω–µ–æ–±–æ–≤\'—è–∑–∫–æ–≤–æ)', style=discord.TextStyle.short, required=False)

    async def on_submit(self, interaction: discord.Interaction):
        news_embed = {
            "timestamp": datetime.now().isoformat(),
            "uk": {
                "title": str(self.news_title),
                "description": str(self.news_content),
                "image": str(self.news_image) if self.news_image.value else None
            },
            "en": {
                "title": str(self.news_title),
                "description": str(self.news_content),
                "image": str(self.news_image) if self.news_image.value else None
            }
        }
        
        NEWS_ITEMS.insert(0, news_embed)
        
        if len(NEWS_ITEMS) > 20:
            NEWS_ITEMS.pop()
        
        channel = bot.get_channel(NEWS_CHANNEL_ID)
        if channel:
            if not hasattr(bot, 'main_news_message'):
                main_embed = discord.Embed(
                    title=BASE_NEWS["uk"]["title"],
                    description=BASE_NEWS["uk"]["description"],
                    color=discord.Color.gold()
                )
                main_embed.set_footer(text=BASE_NEWS["uk"]["footer"])
                bot.main_news_message = await channel.send(embed=main_embed)
            
            embed = discord.Embed(
                title=news_embed["uk"]["title"],
                description=news_embed["uk"]["description"],
                color=discord.Color.green(),
                timestamp=datetime.fromisoformat(news_embed["timestamp"])
            )
            
            if news_embed["uk"]["image"]:
                embed.set_image(url=news_embed["uk"]["image"])
            
            await channel.send(embed=embed)
        
        await interaction.response.send_message("‚úÖ –ù–æ–≤–∏–Ω—É —É—Å–ø—ñ—à–Ω–æ –æ–ø—É–±–ª—ñ–∫–æ–≤–∞–Ω–æ!", ephemeral=True)

@bot.tree.command(name="news", description="–û–ø—É–±–ª—ñ–∫—É–≤–∞—Ç–∏ –Ω–æ–≤–∏–Ω—É")
@commands.has_permissions(administrator=True)
async def news(interaction: discord.Interaction):
    if not has_command_role(interaction, "rules"):
        return await interaction.response.send_message(
            "‚õî –£ –≤–∞—Å –Ω–µ–º–∞—î —Ä–æ–ª—ñ, –Ω–µ–æ–±—Ö—ñ–¥–Ω–æ—ó –¥–ª—è —Ü—ñ—î—ó –∫–æ–º–∞–Ω–¥–∏!",
            ephemeral=True
        )
    
    modal = NewsModal()
    await interaction.response.send_modal(modal)

@bot.tree.command(name="shownews", description="–ü–æ–∫–∞–∑–∞—Ç–∏ –æ—Å—Ç–∞–Ω–Ω—ñ –Ω–æ–≤–∏–Ω–∏")
async def shownews(interaction: discord.Interaction, count: int = 5):
    if not has_command_role(interaction, "rules"):
        return await interaction.response.send_message(
            "‚õî –£ –≤–∞—Å –Ω–µ–º–∞—î —Ä–æ–ª—ñ, –Ω–µ–æ–±—Ö—ñ–¥–Ω–æ—ó –¥–ª—è —Ü—ñ—î—ó –∫–æ–º–∞–Ω–¥–∏!",
            ephemeral=True
        )
    
    count = max(1, min(count, 10))
    
    main_embed = discord.Embed(
        title=BASE_NEWS["uk"]["title"],
        description=BASE_NEWS["uk"]["description"],
        color=discord.Color.gold()
    )
    main_embed.set_footer(text=BASE_NEWS["uk"]["footer"])
    
    await interaction.response.send_message(embed=main_embed)
    
    for news_item in NEWS_ITEMS[:count]:
        embed = discord.Embed(
            title=news_item["uk"]["title"],
            description=news_item["uk"]["description"],
            color=discord.Color.green(),
            timestamp=datetime.fromisoformat(news_item["timestamp"])
        )
        
        if news_item["uk"]["image"]:
            embed.set_image(url=news_item["uk"]["image"])
        
        await interaction.followup.send(embed=embed)

EVENTS_CHANNEL_ID = 1396077442765950976

BASE_EVENTS = {
    "en": {
        "title": "üóìÔ∏è Upcoming Events",
        "description": (
            "Here you'll find all upcoming **events**, **tournaments**, and server activities.\n"
            "üìå Each event is posted as a separate message with all the details: time, format, prizes, and how to join."
        ),
        "footer": "‚úÖ Don‚Äôt miss out ‚Äî register and play with us!"
    },
    "uk": {
        "title": "üóìÔ∏è –ü—Ä–µ–¥—Å—Ç–æ—è—â–∏–µ —Å–æ–±—ã—Ç–∏—è",
        "description": (
            "–ó–¥–µ—Å—å –ø—É–±–ª–∏–∫—É—é—Ç—Å—è –≤—Å–µ –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ **–∏–≤–µ–Ω—Ç—ã**, **—Ç—É—Ä–Ω–∏—Ä—ã** –∏ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ —Å–µ—Ä–≤–µ—Ä–∞.\n"
            "üìå –ö–∞–∂–¥–æ–µ —Å–æ–±—ã—Ç–∏–µ ‚Äî –æ—Ç–¥–µ–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –ø–æ–¥—Ä–æ–±–Ω–æ—Å—Ç—è–º–∏: –≤—Ä–µ–º—è, —Ñ–æ—Ä–º–∞—Ç, –ø—Ä–∏–∑—ã –∏ —É—Å–ª–æ–≤–∏—è —É—á–∞—Å—Ç–∏—è."
        ),
        "footer": "‚úÖ –ù–µ —É–ø—É—Å—Ç–∏ —à–∞–Ω—Å ‚Äî —Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Å—è –∏ —É—á–∞—Å—Ç–≤—É–π –≤–º–µ—Å—Ç–µ —Å –Ω–∞–º–∏!"
    }
}


EVENTS_ITEMS = []

class EventModal(Modal, title='–°—Ç–≤–æ—Ä–∏—Ç–∏ –ø–æ–¥—ñ—é'):
    event_name = TextInput(label='–ù–∞–∑–≤–∞ –ø–æ–¥—ñ—ó', style=discord.TextStyle.short)
    event_description = TextInput(label='–û–ø–∏—Å –ø–æ–¥—ñ—ó', style=discord.TextStyle.long)
    event_date = TextInput(label='–î–∞—Ç–∞ (–î–î.–ú–ú.–†–†–†–†)', style=discord.TextStyle.short)
    event_time = TextInput(label='–ß–∞—Å (–ì–ì:–•–•)', style=discord.TextStyle.short)
    event_image = TextInput(label='–ü–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∞ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è (–Ω–µ–æ–±–æ–≤\'—è–∑–∫–æ–≤–æ)', style=discord.TextStyle.short, required=False)

    async def on_submit(self, interaction: discord.Interaction):
        try:
            day, month, year = map(int, str(self.event_date).split('.'))
            hour, minute = map(int, str(self.event_time).split(':'))
            event_datetime = datetime(year, month, day, hour, minute)
            
            event_embed = {
                "timestamp": event_datetime.isoformat(),
                "uk": {
                    "title": str(self.event_name),
                    "description": str(self.event_description),
                    "date": f"{day:02d}.{month:02d}.{year}",
                    "time": f"{hour:02d}:{minute:02d}",
                    "image": str(self.event_image) if self.event_image.value else None
                },
                "en": {
                    "title": str(self.event_name),
                    "description": str(self.event_description),
                    "date": f"{day:02d}.{month:02d}.{year}",
                    "time": f"{hour:02d}:{minute:02d}",
                    "image": str(self.event_image) if self.event_image.value else None
                }
            }
            
            EVENTS_ITEMS.append(event_embed)
            EVENTS_ITEMS.sort(key=lambda x: x["timestamp"])
            
            if len(EVENTS_ITEMS) > 30:
                EVENTS_ITEMS.pop(0)
            
            channel = bot.get_channel(EVENTS_CHANNEL_ID)
            if channel:
                if not hasattr(bot, 'main_events_message'):
                    main_embed = discord.Embed(
                        title=BASE_EVENTS["uk"]["title"],
                        description=BASE_EVENTS["uk"]["description"],
                        color=discord.Color.blurple()
                    )
                    main_embed.set_footer(text=BASE_EVENTS["uk"]["footer"])
                    bot.main_events_message = await channel.send(embed=main_embed)
                
                embed = discord.Embed(
                    title=event_embed["uk"]["title"],
                    description=event_embed["uk"]["description"],
                    color=discord.Color.green()
                )
                embed.add_field(name="üìÖ –î–∞—Ç–∞", value=event_embed["uk"]["date"], inline=True)
                embed.add_field(name="üïí –ß–∞—Å", value=event_embed["uk"]["time"], inline=True)
                
                if event_embed["uk"]["image"]:
                    embed.set_image(url=event_embed["uk"]["image"])
                
                await channel.send(embed=embed)
            
            await interaction.response.send_message("‚úÖ –ü–æ–¥—ñ—é —É—Å–ø—ñ—à–Ω–æ —Å—Ç–≤–æ—Ä–µ–Ω–æ!", ephemeral=True)
        except ValueError:
            await interaction.response.send_message("‚ùå –ù–µ–≤—ñ—Ä–Ω–∏–π —Ñ–æ—Ä–º–∞—Ç –¥–∞—Ç–∏ –∞–±–æ —á–∞—Å—É! –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π—Ç–µ –î–î.–ú–ú.–†–†–†–† –¥–ª—è –¥–∞—Ç–∏ —Ç–∞ –ì–ì:–•–• –¥–ª—è —á–∞—Å—É.", ephemeral=True)

@bot.tree.command(name="event", description="–°—Ç–≤–æ—Ä–∏—Ç–∏ –Ω–æ–≤—É –ø–æ–¥—ñ—é")
@commands.has_permissions(administrator=True)
async def event(interaction: discord.Interaction):
    if not has_command_role(interaction, "rules"):
        return await interaction.response.send_message(
            "‚õî –£ –≤–∞—Å –Ω–µ–º–∞—î —Ä–æ–ª—ñ, –Ω–µ–æ–±—Ö—ñ–¥–Ω–æ—ó –¥–ª—è —Ü—ñ—î—ó –∫–æ–º–∞–Ω–¥–∏!",
            ephemeral=True
        )
    
    modal = EventModal()
    await interaction.response.send_modal(modal)

@bot.tree.command(name="events", description="–ü–æ–∫–∞–∑–∞—Ç–∏ –º–∞–π–±—É—Ç–Ω—ñ –ø–æ–¥—ñ—ó")
async def events(interaction: discord.Interaction, count: int = 10):
    if not has_command_role(interaction, "rules"):
        return await interaction.response.send_message(
            "‚õî –£ –≤–∞—Å –Ω–µ–º–∞—î —Ä–æ–ª—ñ, –Ω–µ–æ–±—Ö—ñ–¥–Ω–æ—ó –¥–ª—è —Ü—ñ—î—ó –∫–æ–º–∞–Ω–¥–∏!",
            ephemeral=True
        )

    now = datetime.now()
    upcoming_events = [e for e in EVENTS_ITEMS if datetime.fromisoformat(e["timestamp"]) > now]
    
    count = max(1, min(count, 10))
    
    main_embed = discord.Embed(
        title=BASE_EVENTS["uk"]["title"],
        description=BASE_EVENTS["uk"]["description"],
        color=discord.Color.blurple()
    )
    main_embed.set_footer(text=BASE_EVENTS["uk"]["footer"])
    
    await interaction.response.send_message(embed=main_embed)
    
    for event_item in upcoming_events[:count]:
        embed = discord.Embed(
            title=event_item["uk"]["title"],
            description=event_item["uk"]["description"],
            color=discord.Color.green()
        )
        embed.add_field(name="üìÖ –î–∞—Ç–∞", value=event_item["uk"]["date"], inline=True)
        embed.add_field(name="üïí –ß–∞—Å", value=event_item["uk"]["time"], inline=True)
        
        if event_item["uk"]["image"]:
            embed.set_image(url=event_item["uk"]["image"])
        
        await interaction.followup.send(embed=embed)

class LanguageView(View):
    def __init__(self, content_type):
        super().__init__(timeout=None)
        self.content_type = content_type
        
        uk_button = Button(label="–†—É—Å—Å–∫–∏–π", style=discord.ButtonStyle.primary, custom_id=f"lang_uk_{content_type}")
        en_button = Button(label="English", style=discord.ButtonStyle.primary, custom_id=f"lang_en_{content_type}")
        
        uk_button.callback = self.language_callback
        en_button.callback = self.language_callback
        
        self.add_item(uk_button)
        self.add_item(en_button)
    
    async def language_callback(self, interaction: discord.Interaction):
        lang, content_type = interaction.data["custom_id"].split("_")[1:]
        
        if content_type == "rules":
            content = RULES
        elif content_type == "guide":
            content = GUIDE
        elif content_type == "ranks":
            content = RANKS
        elif content_type == "news":
            content = NEWS_ITEMS
        else:
            content = EVENTS_ITEMS
        
        embed = discord.Embed(
            title=content[lang]["title"],
            description=content[lang]["description"],
            color=discord.Color.gold() if content_type == "news" else discord.Color.blue()
        )
        
        for field_title, field_text in content[lang]["fields"][:1000]:  
            embed.add_field(name=field_title, value=field_text, inline=False)
        
        embed.set_footer(text=content[lang]["footer"])
        
        await interaction.response.edit_message(embed=embed, view=self)

@bot.event
async def on_ready():
    print(f"–ë–æ—Ç {bot.user} –≥–æ—Ç–æ–≤–∏–π –¥–æ —Ä–æ–±–æ—Ç–∏!")
    bot.add_view(LanguageView("rules"))
    bot.add_view(LanguageView("guide"))
    bot.add_view(LanguageView("ranks"))
    try:
        synced = await bot.tree.sync()
        print(f"–°–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–æ–≤–∞–Ω–æ {len(synced)} –∫–æ–º–∞–Ω–¥")
    except Exception as e:
        print(f"–ü–æ–º–∏–ª–∫–∞ —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—ó: {e}")

@bot.event
async def on_member_join(member):
    role = get(member.guild.roles, id=AUTO_ROLE_ID)
    if role:
        try:
            await member.add_roles(role)
            channel = bot.get_channel(WELCOME_CHANNEL_ID)
            if channel:
                embed = discord.Embed(
                    title=f"–õ–∞—Å–∫–∞–≤–æ –ø—Ä–æ—Å–∏–º–æ, {member.name}!",
                    description=f"–í–∞–º –≤–∏–¥–∞–Ω–æ —Ä–æ–ª—å {role.mention}",
                    color=discord.Color.green()
                )
                await channel.send(embed=embed)
        except Exception as e:
            print(f"–ü–æ–º–∏–ª–∫–∞: {e}")

@bot.tree.command(name="rules", description="–ü–æ–∫–∞–∑–∞—Ç–∏ –ø—Ä–∞–≤–∏–ª–∞ —Å–µ—Ä–≤–µ—Ä—É")
async def rules(interaction: discord.Interaction):
    if not has_command_role(interaction, "rules"):
        return await interaction.response.send_message(
            "‚õî –£ –≤–∞—Å –Ω–µ–º–∞—î —Ä–æ–ª—ñ, –Ω–µ–æ–±—Ö—ñ–¥–Ω–æ—ó –¥–ª—è —Ü—ñ—î—ó –∫–æ–º–∞–Ω–¥–∏!",
            ephemeral=True
        )
    
    embed = discord.Embed(
        title=RULES["uk"]["title"],
        description=RULES["uk"]["description"],
        color=discord.Color.blue()
    )
    
    for field_title, field_text in RULES["uk"]["fields"]:
        embed.add_field(name=field_title, value=field_text, inline=False)
    
    embed.set_footer(text=RULES["uk"]["footer"])
    
    await interaction.response.send_message(embed=embed, view=LanguageView("rules"))

@bot.tree.command(name="guide", description="–Ø–∫ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—Ç–∏—Å—å —Å–µ—Ä–≤–µ—Ä–æ–º")
async def guide(interaction: discord.Interaction):
    if not has_command_role(interaction, "rules"):
        return await interaction.response.send_message(
            "‚õî –£ –≤–∞—Å –Ω–µ–º–∞—î —Ä–æ–ª—ñ, –Ω–µ–æ–±—Ö—ñ–¥–Ω–æ—ó –¥–ª—è —Ü—ñ—î—ó –∫–æ–º–∞–Ω–¥–∏!",
            ephemeral=True
        )
    
    embed = discord.Embed(
        title=GUIDE["uk"]["title"],
        description=GUIDE["uk"]["description"],
        color=discord.Color.blue()
    )
    
    for field_title, field_text in GUIDE["uk"]["fields"]:
        embed.add_field(name=field_title, value=field_text, inline=False)
    
    embed.set_footer(text=GUIDE["uk"]["footer"])
    
    await interaction.response.send_message(embed=embed, view=LanguageView("guide"))

@bot.tree.command(name="ranks", description="–°–∏—Å—Ç–µ–º–∞ —Ä–∞–Ω–≥—ñ–≤ —Å–µ—Ä–≤–µ—Ä—É")
async def ranks(interaction: discord.Interaction):
    if not has_command_role(interaction, "rules"):
        return await interaction.response.send_message(
            "‚õî –£ –≤–∞—Å –Ω–µ–º–∞—î —Ä–æ–ª—ñ, –Ω–µ–æ–±—Ö—ñ–¥–Ω–æ—ó –¥–ª—è —Ü—ñ—î—ó –∫–æ–º–∞–Ω–¥–∏!",
            ephemeral=True
        )
    
    embed = discord.Embed(
        title=RANKS["uk"]["title"],
        description=RANKS["uk"]["description"],
        color=discord.Color.blue()
    )
    
    for field_title, field_text in RANKS["uk"]["fields"]:
        embed.add_field(name=field_title, value=field_text, inline=False)
    
    embed.set_footer(text=RANKS["uk"]["footer"])
    
    await interaction.response.send_message(embed=embed, view=LanguageView("ranks"))

@bot.command()
@commands.has_permissions(administrator=True)
async def sync(ctx):
    await bot.tree.sync()
    await ctx.send("‚úÖ –ö–æ–º–∞–Ω–¥–∏ —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–æ–≤–∞–Ω–æ!")

bot.run(os.getenv("TOKEN"))
